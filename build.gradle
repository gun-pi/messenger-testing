plugins {
    id 'java'
    id 'idea'
    id 'checkstyle'
    id 'pmd'
    id 'com.bmuschko.clover' version "2.2.5"
    id 'com.github.spotbugs' version "4.2.2"
}

repositories {
    mavenLocal()
    mavenCentral()
}
//-----------------------------BASE CONFIGURATION--------------------------------------------
clover {

    testIncludes = ['**/*Test.java', '**/*Spec.groovy']
    testExcludes = ['**/Mock*.java']

    targetPercentage = '75%'

    report {
        html = true
        pdf = true

        columns {
            coveredMethods format: 'longbar', min: '75'
            coveredStatements format: '%'
            coveredBranches format: 'raw'
            totalPercentageCovered format: '%', scope: 'package'
        }

    }
}

ext {
    loggerVersion = '2.14.1'
    junitVersion = '5.8.1'
    junitPlatformVersion = '1.8.1'
    mockitoVersion = '4.0.0'
}


dependencies {
    clover "org.openclover:clover:4.4.1"

    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junitVersion"
    testImplementation "org.junit.platform:junit-platform-suite-api:$junitPlatformVersion"
    testImplementation "org.junit.platform:junit-platform-suite-engine:$junitPlatformVersion"

    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"

    implementation "org.apache.logging.log4j:log4j-core:$loggerVersion"
    implementation "org.apache.logging.log4j:log4j-api:$loggerVersion"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$loggerVersion"
    implementation "org.slf4j:slf4j-api:1.7.32"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

checkstyle {
    toolVersion "7.6.1"
    checkstyleTest.enabled = false
}

check.dependsOn cloverGenerateReport

spotbugsMain {
    reports {
        html {
            enabled = true
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

pmd {
    ignoreFailures = true
    pmdTest.enabled = false
    ruleSets = [
            'java-basic',
            'java-braces',
            'java-clone',
            'java-codesize',
            'java-comments',
            'java-controversial',
            'java-coupling',
            'java-design',
            'java-empty',
            'java-finalizers',
            'java-imports',
            'java-optimizations',
            'java-strictexception',
            'java-strings',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
    ]
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

